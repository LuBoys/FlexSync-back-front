'use client'

import { useRef, useEffect, useState } from 'react'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from "@/components/ui/card"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"

export default function QuEstCeQueFlexSync() {
  const sectionRefs = {
    presentation: useRef<HTMLDivElement>(null),
    fonctionnalites: useRef<HTMLDivElement>(null),
    temoignages: useRef<HTMLDivElement>(null),
    tarifs: useRef<HTMLDivElement>(null),
  }

  const [openModal, setOpenModal] = useState<string | null>(null)

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-fade-in')
          }
        })
      },
      { threshold: 0.1 }
    )

    Object.values(sectionRefs).forEach((ref) => {
      if (ref.current) {
        observer.observe(ref.current)
      }
    })

    return () => observer.disconnect()
  }, [])

  {/*const scrollToSection = (sectionRef: React.RefObject<HTMLDivElement>) => {
    sectionRef.current?.scrollIntoView({ behavior: 'smooth' })
  }
  */}
  const features = [
    {
      title: "Planification d'entra√Ænements",
      description: "Cr√©ez et partagez des programmes d'entra√Ænement personnalis√©s avec vos √©l√®ves.",
      icon: "üìÖ",
      details: "Notre outil de planification d'entra√Ænements vous permet de cr√©er des programmes sur mesure pour chaque client. Vous pouvez d√©finir des exercices sp√©cifiques, des s√©ries, des r√©p√©titions, et m√™me ajouter des notes personnalis√©es. Les clients peuvent acc√©der √† leur programme √† tout moment via l'application mobile ou le site web, et marquer les s√©ances comme termin√©es pour un suivi en temps r√©el.",
      features: [
        "Cr√©ation de programmes hebdomadaires ou mensuels",
        "Biblioth√®que d'exercices int√©gr√©e",
        "Possibilit√© d'ajouter des vid√©os d√©monstratives",
        "Notifications de rappel pour les clients",
        "Suivi de l'adh√©sion au programme"
      ]
    },
    {
      title: "Suivi des progr√®s",
      description: "Visualisez les progr√®s de vos √©l√®ves avec des graphiques et des statistiques d√©taill√©s.",
      icon: "üìä",
      details: "Notre syst√®me de suivi des progr√®s offre une vue compl√®te de l'√©volution de vos clients. Vous pouvez suivre des m√©triques cl√©s telles que le poids, les mensurations, les performances aux exercices, et m√™me des indicateurs personnalis√©s. Les donn√©es sont pr√©sent√©es sous forme de graphiques interactifs, permettant une analyse approfondie et facilitant l'ajustement des programmes d'entra√Ænement.",
      features: [
        "Graphiques d'√©volution personnalisables",
        "Comparaison des performances dans le temps",
        "Alertes de plateau ou de r√©gression",
        "Rapports de progr√®s automatis√©s",
        "Int√©gration avec des appareils de fitness connect√©s"
      ]
    },
    {
      title: "Communication en temps r√©el",
      description: "Restez en contact avec vos √©l√®ves gr√¢ce √† notre syst√®me de messagerie int√©gr√©.",
      icon: "üí¨",
      details: "Notre plateforme de communication en temps r√©el facilite les √©changes entre coachs et clients. Vous pouvez envoyer des messages instantan√©s, partager des fichiers, et m√™me organiser des appels vid√©o directement depuis l'application. Cette fonctionnalit√© permet un suivi plus proche et personnalis√©, renfor√ßant la relation coach-client et am√©liorant l'engagement.",
      features: [
        "Messagerie instantan√©e",
        "Partage de fichiers (images, vid√©os, documents)",
        "Appels vid√©o int√©gr√©s",
        "Cr√©ation de groupes de discussion",
        "Notifications push pour une r√©activit√© optimale"
      ]
    },
    {
      title: "Biblioth√®que d'exercices",
      description: "Acc√©dez √† une vaste biblioth√®que d'exercices avec des vid√©os et des instructions d√©taill√©es.",
      icon: "üèãÔ∏è‚Äç‚ôÄÔ∏è",
      details: "Notre biblioth√®que d'exercices compl√®te contient des milliers de mouvements couvrant toutes les disciplines du fitness. Chaque exercice est accompagn√© d'une vid√©o d√©monstrative, d'instructions d√©taill√©es sur la forme correcte, et d'informations sur les muscles cibl√©s. Vous pouvez facilement int√©grer ces exercices dans vos programmes d'entra√Ænement ou les partager individuellement avec vos clients.",
      features: [
        "Plus de 5000 exercices cat√©goris√©s",
        "Vid√©os HD de d√©monstration",
        "Instructions √©crites d√©taill√©es",
        "Informations sur les muscles cibl√©s et les variantes",
        "Possibilit√© d'ajouter vos propres exercices personnalis√©s"
      ]
    },
    {
      title: "Gestion des paiements",
      description: "G√©rez facilement les paiements et les abonnements de vos √©l√®ves.",
      icon: "üí≥",
      details: "Notre syst√®me de gestion des paiements simplifie la facturation et le suivi des revenus. Vous pouvez cr√©er diff√©rents forfaits d'abonnement, g√©rer les paiements r√©currents, et m√™me proposer des options de paiement √† la s√©ance. Les clients peuvent effectuer des paiements s√©curis√©s directement via l'application, et vous recevez des notifications instantan√©es pour chaque transaction.",
      features: [
        "Int√©gration avec les principaux syst√®mes de paiement",
        "Gestion des abonnements r√©currents",
        "Facturation automatis√©e",
        "Rapports financiers d√©taill√©s",
        "Options de remboursement et de cr√©dit"
      ]
    },
    {
      title: "Analyses et rapports",
      description: "Obtenez des insights pr√©cieux sur vos performances et celles de vos √©l√®ves.",
      icon: "üìà",
      details: "Notre outil d'analyse avanc√© vous fournit des insights d√©taill√©s sur votre activit√© de coaching et les performances de vos clients. Vous pouvez visualiser des tendances √† long terme, identifier les domaines d'am√©lioration, et prendre des d√©cisions √©clair√©es pour optimiser vos services. Les rapports personnalisables vous permettent de vous concentrer sur les m√©triques qui comptent le plus pour votre activit√©.",
      features: [
        "Tableaux de bord personnalisables",
        "Analyse de la r√©tention des clients",
        "Suivi de la satisfaction client",
        "Pr√©visions de revenus",
        "Exportation de rapports au format PDF ou Excel"
      ]
    }
  ]

  return (
    <div className="min-h-screen from-gray-50">
         {/*
      <nav className="fixed top-0 left-0 right-0 bg-white bg-opacity-90 shadow-sm z-10">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <h1 className="text-2xl font-bold text-violet-600">FlexSync</h1>
          <div className="space-x-4">
            <Button variant="ghost" onClick={() => scrollToSection(sectionRefs.presentation)}>Pr√©sentation</Button>
            <Button variant="ghost" onClick={() => scrollToSection(sectionRefs.fonctionnalites)}>Fonctionnalit√©s</Button>
            <Button variant="ghost" onClick={() => scrollToSection(sectionRefs.temoignages)}>T√©moignages</Button>
            <Button variant="ghost" onClick={() => scrollToSection(sectionRefs.tarifs)}>Tarifs</Button>
          </div>
        </div>
      </nav>
*/}
      <main className="container mx-auto px-4 space-y-32">
        <section ref={sectionRefs.presentation} className="min-h-screen flex items-center justify-center">
          <div className="text-center space-y-8">
            <h2 className="text-5xl font-bold text-gray-900">Qu&apos;est-ce que FlexSync ?</h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              FlexSync est une plateforme innovante qui connecte les coachs sportifs √† leurs √©l√®ves, 
              offrant des outils puissants pour la gestion des entra√Ænements, le suivi des progr√®s 
              et la communication en temps r√©el.
            </p>
            <Button size="lg" className="bg-violet-600 hover:bg-violet-700 text-white">
              Commencer gratuitement
            </Button>
          </div>
        </section>

        <section ref={sectionRefs.fonctionnalites} className="min-h-screen">
          <h2 className="text-4xl font-bold text-center text-gray-900 mb-16">Fonctionnalit√©s</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {features.map((feature, index) => (
              <Dialog key={index} open={openModal === feature.title} onOpenChange={(isOpen) => setOpenModal(isOpen ? feature.title : null)}>
                <DialogTrigger asChild>
                  <Card className="transition-all duration-300 hover:shadow-lg cursor-pointer ">
                    <CardHeader>
                      <CardTitle className="flex items-center">
                        <span className="text-4xl mr-4">{feature.icon}</span>
                        {feature.title}
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <CardDescription>{feature.description}</CardDescription>
                    </CardContent>
                  </Card>
                </DialogTrigger>
                <DialogContent className="max-w-3xl bg-white">
                  <DialogHeader>
                    <DialogTitle className="text-2xl text-black flex items-center">
                      <span className="text-4xl mr-4">{feature.icon}</span>
                      {feature.title}
                    </DialogTitle>
                  </DialogHeader>
                  <DialogDescription>
                    <p className="text-gray-700 mb-4">{feature.details}</p>
                    <h4 className="font-semibold text-lg mb-2">Caract√©ristiques principales :</h4>
                    <ul className="list-disc pl-5 space-y-1">
                      {feature.features.map((item, itemIndex) => (
                        <li key={itemIndex}>{item}</li>
                      ))}
                    </ul>
                  </DialogDescription>
                </DialogContent>
              </Dialog>
            ))}
          </div>
        </section>

        <section ref={sectionRefs.temoignages} className="min-h-screen">
          <h2 className="text-4xl font-bold text-center text-gray-900 mb-16">T√©moignages</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {[
              {
                name: "Sophie L.",
                role: "Coach de fitness",
                content: "FlexSync a r√©volutionn√© ma fa√ßon de g√©rer mes clients. Je peux maintenant suivre leurs progr√®s en temps r√©el et adapter leurs programmes d'entra√Ænement en cons√©quence.",
                avatar: "/placeholder.svg?height=100&width=100"
              },
              {
                name: "Thomas M.",
                role: "Nutritionniste",
                content: "Gr√¢ce √† FlexSync, je peux facilement cr√©er et partager des plans nutritionnels personnalis√©s. La communication avec mes clients n'a jamais √©t√© aussi simple !",
                avatar: "/placeholder.svg?height=100&width=100"
              },
              {
                name: "Emma R.",
                role: "Yogini",
                content: "L'interface intuitive de FlexSync me permet de me concentrer sur l'enseignement du yoga plut√¥t que sur l'administration. Mes √©l√®ves adorent l'application !",
                avatar: "/placeholder.svg?height=100&width=100"
              },
              {
                name: "Alexandre D.",
                role: "Coach de CrossFit",
                content: "FlexSync m'aide √† garder mes athl√®tes motiv√©s et engag√©s. Les fonctionnalit√©s de suivi des performances sont particuli√®rement utiles pour les comp√©titions.",
                avatar: "/placeholder.svg?height=100&width=100"
              }
            ].map((testimonial, index) => (
              <Card key={index} className="transition-all duration-300 hover:shadow-lg">
                <CardContent className="pt-6">
                  <div className="flex items-start space-x-4">
                    <Avatar>
                      <AvatarImage src={testimonial.avatar} alt={testimonial.name} />
                      <AvatarFallback>{testimonial.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>
                    </Avatar>
                    <div>
                      <CardTitle>{testimonial.name}</CardTitle>
                      <CardDescription>{testimonial.role}</CardDescription>
                    </div>
                  </div>
                  <p className="mt-4 text-gray-600">{testimonial.content}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        <section ref={sectionRefs.tarifs} className="min-h-screen">
          <h2 className="text-4xl font-bold text-center text-gray-900 mb-16">Tarifs</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                name: "D√©butant",
                price: "19,99‚Ç¨",
                period: "par mois",
                features: [
                  "Jusqu'√† 10 clients",
                  "Planification d'entra√Ænements",
                  "Messagerie de base",
                  "Suivi des progr√®s limit√©"
                ]
              },
              {
                name: "Professionnel",
                price: "49,99‚Ç¨",
                period: "par mois",
                features: [
                  "Jusqu'√† 50 clients",
                  "Planification d'entra√Ænements avanc√©e",
                  "Messagerie illimit√©e",
                  "Suivi des progr√®s complet",
                  "Analyses et rapports",
                  "Int√©gration de paiements"
                ]
              },
              {
                name: "Entreprise",
                price: "99,99‚Ç¨",
                period: "par mois",
                features: [
                  "Clients illimit√©s",
                  "Toutes les fonctionnalit√©s Pro",
                  "Support prioritaire",
                  "API personnalis√©e",
                  "Formations exclusives",
                  "Personnalisation de la marque"
                ]
              }
            ].map((plan, index) => (
              <Card key={index} className="flex flex-col transition-all duration-300 hover:shadow-lg">
                <CardHeader>
                  <CardTitle className="text-2xl">{plan.name}</CardTitle>
                  <CardDescription>
                    <span className="text-3xl font-bold">{plan.price}</span> {plan.period}
                  </CardDescription>
                </CardHeader>
                <CardContent className="flex-grow">
                  <ul className="space-y-2">
                    {plan.features.map((feature, featureIndex) => (
                      <li key={featureIndex} className="flex items-center">
                        <svg className="w-4 h-4 mr-2 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        {feature}
                      </li>
                    ))}
                  </ul>
                </CardContent>
                <CardFooter>
                  <Button className="w-full bg-violet-600 hover:bg-violet-700 text-white">Choisir ce plan</Button>
                </CardFooter>
              </Card>
            ))}
          </div>
        </section>
      </main>
    </div>
  )
}